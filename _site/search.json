[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling Assignment",
    "section": "",
    "text": "# Loading Libraries\n\nlibrary(tidyverse)\nlibrary(vroom)\nlibrary(data.table)\nlibrary(lubridate)\n\n# Load the required data\n\npatent_col_types <- list(\n  id         = col_character(),\n  date       = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\n\npatent_dt <- vroom(\n  file      = \"D:/assignment_datascience/data wrangling/Patent_data_reduced/Patent_data_reduced/patent.tsv\",\n  delim     = \"\\t\",\n  col_types = patent_col_types,\n  na        = c(\"\", \"NA\", \"NULL\")\n)\n\nsetDT(patent_dt)\n\npatent_assignee_col_types <- list(\n  patent_id   = col_character(),\n  assignee_id = col_character()\n)\n\npatent_assignee_dt <- vroom(\n  file      = \"D:/assignment_datascience/data wrangling/Patent_data_reduced/Patent_data_reduced/patent_assignee.tsv\",\n  delim     = \"\\t\",\n  col_types = patent_assignee_col_types,\n  na        = c(\"\", \"NA\", \"NULL\")\n)\n\nsetDT(patent_assignee_dt)\n\nassignee_col_types <- list(\n  id           = col_character(),\n  type         = col_character(),\n  organization = col_character()\n)\n\nassignee_dt <- vroom(\n  file      = \"D:/assignment_datascience/data wrangling/Patent_data_reduced/Patent_data_reduced/assignee.tsv\",\n  delim     = \"\\t\",\n  col_types = assignee_col_types,\n  na        = c(\"\", \"NA\", \"NULL\")\n)\n\nsetDT(assignee_dt)\n\nuspc_col_types <- list(\n  patent_id = col_character(),\n  mainclass_id = col_character(),\n  sequence = col_double()\n)\n\nuspc_dt <- vroom(\n  file      = \"D:/assignment_datascience/data wrangling/Patent_data_reduced/Patent_data_reduced/uspc.tsv\",\n  delim     = \"\\t\",\n  col_types = uspc_col_types,\n  na        = c(\"\", \"NA\", \"NULL\")\n)\n\nsetDT(uspc_dt)\n\n# Answer to question 1\n\nus_top_10_companies_dt <- merge(x = patent_assignee_dt, y = assignee_dt, by.x = \"assignee_id\", by.y = \"id\")[\n  type == 2 & (!is.na(patent_id) | !is.na(organization)), ][\n    , .(count = .N), by = organization\n  ][order(-count), ][1:10,][]\n\nus_top_10_companies_dt\n\n\n\n  \n\n\n# Answer to question 2\n\nus_top_10_new_august <- merge(x = patent_dt, y = patent_assignee_dt, by.x = \"id\", by.y = \"patent_id\")[\n  assignee_dt, on = c(assignee_id = \"id\")\n][type == 2,][\n  !is.na(id) | !is.na(organization),][, month := month(ymd(date))][month == 8, ][\n    , .(count = .N), by = organization\n  ][order(-count), ][1:10,][]\n\nus_top_10_new_august\n\n\n\n  \n\n\n# Answer to question 3\n\ntop_10_worldwide <- merge(x = patent_assignee_dt, y = assignee_dt, by.x = \"assignee_id\", by.y = \"id\")[\n  !is.na(patent_id) | !is.na(organization),][, .(count = .N), by = organization][order(-count),][\n    !is.na(organization),][1:10,][]\n\ntop_10_worldwide\n\n\n\n  \n\n\ntop_5_uspto <- merge(x = uspc_dt, y = patent_assignee_dt, by = \"patent_id\")[\n  assignee_dt, on = c(assignee_id = \"id\")][top_10_worldwide, on = \"organization\"][\n    , .(count = .N), by = mainclass_id][order(-count),][1:5,][]\n\ntop_5_uspto"
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization Assignment",
    "section": "",
    "text": "# Loading necessary libraries\nlibrary(tidyverse)\n\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(lubridate)\n\n## Solution to Challenge 1 \ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>% \n  select(location, date, total_cases) %>% \n  filter(location == \"Germany\" | location == \"United Kingdom\" | location == \"France\" |\n           location == \"Spain\" | location == \"United States\" | location == \"Europe\") %>% \n  mutate(cases_format = scales::dollar(total_cases, big.mark = \".\",\n                                       decimal.mark = \",\",\n                                       prefix = \"\",\n                                       suffix = \"\"))\n\n#> Rows: 311516 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncovid_data_tbl %>% \n  \n  ggplot(aes(x = date, y = total_cases, color = location)) +\n  \n  geom_line(size = 1) +\n  geom_label_repel(aes(x = date, y = total_cases, label = cases_format, fill = location),\n                   vjust = 0.7,\n                   hjust = 1.2,\n                   color = \"white\",\n                   box.padding = 0.0,\n                   min.segment.length = 0,\n                   segment.color = \"black\",\n                   data  = covid_data_tbl %>% slice(which.max(total_cases))) +\n  \n  guides(fill = FALSE) +\n  \n  expand_limits(y = 0) +\n  \n  scale_color_brewer(palette = \"YlOrRd\") +\n  \n  scale_y_continuous(labels = scales::dollar_format(scale = 1e-6,\n                                                    prefix = \"\",\n                                                    suffix = \" M\")) +\n  \n  scale_x_date(date_labels = \"%B '%y\",\n               date_breaks = \"1 month\",\n               expand = c(0, NA)) +\n  \n  labs(\n    title = \"COVID-19 confirmed cases worldwide\",\n    subtitle = \"As of 21/05/2022\",\n    x = \"\",\n    y = \"Cumulative Cases\",\n    color = \"Country\"\n  ) +\n  \n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(angle = 45)\n  )\n\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n\n\n#> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\n#> of ggplot2 3.3.4.\n\n\n#> Warning: Removed 91 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\n\n\n\n1 Data visualization challenge 2\nLast compiled: 2023-05-23\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(lubridate)\nlibrary(maps)\n\n#> \n#> Attaching package: 'maps'\n\n\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n\n## Challenge 2\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>% \n  mutate(mortality_rate = total_deaths / population) %>% \n  group_by(location) %>% \n  summarise(latest_mort_rate = last(mortality_rate)) %>% \n  select(location, latest_mort_rate) %>% \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  distinct()\n\n#> Rows: 311516 Columns: 67\n\n\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nworld <- map_data(\"world\")\n\ncovid_map <- merge(x = world, y = covid_data_tbl, by.x = \"region\", by.y = \"location\") %>% \n  select(region, long, lat, latest_mort_rate)\n\ncovid_map %>% \n  ggplot() +\n  \n  geom_map(aes(x = long, y = lat, map_id = region, fill = latest_mort_rate), map = world) +\n  \n  borders(\"world\", colour = \"black\") +\n  \n  scale_fill_continuous(labels = scales::percent_format(accuracy = 0.001), \n                        low = \"pink1\", \n                        high = \"darkblue\") +\n  \n  labs(\n    title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n    subtitle = \"Around 6.2 Million confirmed COVID-19 deaths worldwide\",\n    caption = \"Date: 21/05/2022\",\n    fill = \"Mortality Rate\"\n  ) +\n  \n  theme_minimal() +\n  \n  theme(\n    axis.line = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    title = element_text(color = \"red\"),\n    legend.position = \"right\"\n  )\n\n#> Warning in geom_map(aes(x = long, y = lat, map_id = region, fill =\n#> latest_mort_rate), : Ignoring unknown aesthetics: x and y"
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  }
]